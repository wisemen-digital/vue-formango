import{_ as e,K as a,X as t,N as r}from"./chunks/framework.effe93a0.js";const g=JSON.parse('{"title":"Formango","description":"","frontmatter":{},"headers":[],"relativePath":"CHANGELOG.md","filePath":"CHANGELOG.md"}'),o={name:"CHANGELOG.md"},s=r('<h1 id="formango" tabindex="-1">Formango <a class="header-anchor" href="#formango" aria-label="Permalink to &quot;Formango&quot;">​</a></h1><h2 id="_2-0-0" tabindex="-1">2.0.0 <a class="header-anchor" href="#_2-0-0" aria-label="Permalink to &quot;2.0.0&quot;">​</a></h2><h3 id="major-changes" tabindex="-1">Major Changes <a class="header-anchor" href="#major-changes" aria-label="Permalink to &quot;Major Changes&quot;">​</a></h3><ul><li>Implemented Register function on the Field object and the FieldArray object, meaning you create subforms more easily. <br>Visit the <a href="https://wisemen-digital.github.io/vue-formango/examples/subforms" target="_blank" rel="noreferrer">documentation</a> for an example.</li><li>Changed the useForm API to use a single object. <br>For future updates / features the API doesn&#39;t need breaking changes this way.</li><li>Added tests.</li><li>Refactored library based on tests.</li><li>Updated docs for 2.0 and added more examples.</li></ul>',4),n=[s];function i(d,l,h,m,c,u){return a(),t("div",null,n)}const b=e(o,[["render",i]]);export{g as __pageData,b as default};
