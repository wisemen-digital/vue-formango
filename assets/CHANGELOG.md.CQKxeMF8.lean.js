import{_ as o,c as t,ag as r,j as e,o as n}from"./chunks/framework.Di3dN6l_.js";const f=JSON.parse('{"title":"Formango","description":"","frontmatter":{},"headers":[],"relativePath":"CHANGELOG.md","filePath":"CHANGELOG.md"}'),l={name:"CHANGELOG.md"};function i(s,a,d,h,c,m){return n(),t("div",null,a[0]||(a[0]=[r("",3),e("ul",null,[e("li",{"form,":"","css-module":"."},"Form is now the root object that is returned by useForm, instead"),e("li",null,"FieldArray type now requires a single generic to be passed, instead of an array of it"),e("li",null,"FieldArray now returns a type with generic never if passed a non-array path"),e("li",null,"Added onSubmitError callback to useForm, which passes the data and errors to the callback function"),e("li",null,"Added onSubmit callback to useForm, which passes the data to the callback function"),e("li",null,"Added rawErrors to useForm, which is an array of objects with a message and path, which are the raw errors from StandardSchemaV1"),e("li",null,"Added formatErrorsToZodFormattedError to format the errors to ZodFormattedError, which can handle both FormattedError and StandardSchemaV1 Issues"),e("li",null,"Added reset function to useForm, which resets the form to the initial state"),e("li",null,"Removed the onSubmitFormError callback from useForm, as it is now handled by onSubmitError"),e("li",null,"Removed the onSubmitForm callback from useForm, as it is now handled by onSubmit"),e("li",null,"Refactored internal code to use StandardSchemaV1 instead of Zod, which means Zod, ArkType and Valibot are now supported"),e("li",null,"Refactored internal code to use Ref and ComputedRef instead of Reactive"),e("li",null,"Refactored errors to custom formatting, that is an array of objects with a message and path")],-1),r("",9)]))}const b=o(l,[["render",i]]);export{f as __pageData,b as default};
