import{_ as o,S as r,N as t,Q as e,B as a}from"./chunks/framework.bc3fa02f.js";const _=JSON.parse('{"title":"Formango","description":"","frontmatter":{},"headers":[],"relativePath":"CHANGELOG.md","filePath":"CHANGELOG.md"}'),n={name:"CHANGELOG.md"},i=e('<h1 id="formango" tabindex="-1">Formango <a class="header-anchor" href="#formango" aria-label="Permalink to &quot;Formango&quot;">​</a></h1><h2 id="_3-0-0" tabindex="-1">3.0.0 <a class="header-anchor" href="#_3-0-0" aria-label="Permalink to &quot;3.0.0&quot;">​</a></h2><h3 id="major-changes" tabindex="-1">Major changes <a class="header-anchor" href="#major-changes" aria-label="Permalink to &quot;Major changes&quot;">​</a></h3>',3),s=a("ul",null,[a("li",{"form,":"","css-module":"."},"Form is now the root object that is returned by useForm, instead"),a("li",null,"FieldArray type now requires a single generic to be passed, instead of an array of it"),a("li",null,"FieldArray now returns a type with generic never if passed a non-array path"),a("li",null,"Added onSubmitError callback to useForm, which passes the data and errors to the callback function"),a("li",null,"Added onSubmit callback to useForm, which passes the data to the callback function"),a("li",null,"Added rawErrors to useForm, which is an array of objects with a message and path, which are the raw errors from StandardSchemaV1"),a("li",null,"Added formatErrorsToZodFormattedError to format the errors to ZodFormattedError, which can handle both FormattedError and StandardSchemaV1 Issues"),a("li",null,"Added reset function to useForm, which resets the form to the initial state"),a("li",null,"Removed the onSubmitFormError callback from useForm, as it is now handled by onSubmitError"),a("li",null,"Removed the onSubmitForm callback from useForm, as it is now handled by onSubmit"),a("li",null,"Refactored internal code to use StandardSchemaV1 instead of Zod, which means Zod, ArkType and Valibot are now supported"),a("li",null,"Refactored internal code to use Ref and ComputedRef instead of Reactive"),a("li",null,"Refactored errors to custom formatting, that is an array of objects with a message and path")],-1),l=e('<h2 id="_2-0-34" tabindex="-1">2.0.34 <a class="header-anchor" href="#_2-0-34" aria-label="Permalink to &quot;2.0.34&quot;">​</a></h2><h3 id="minor-changes" tabindex="-1">Minor changes <a class="header-anchor" href="#minor-changes" aria-label="Permalink to &quot;Minor changes&quot;">​</a></h3><ul><li>Allow for nested object values to be nullable in initialState</li></ul><h2 id="_2-0-25" tabindex="-1">2.0.25 <a class="header-anchor" href="#_2-0-25" aria-label="Permalink to &quot;2.0.25&quot;">​</a></h2><h3 id="major-changes-1" tabindex="-1">Major changes <a class="header-anchor" href="#major-changes-1" aria-label="Permalink to &quot;Major changes&quot;">​</a></h3><ul><li>Reimplemented vue devtools</li></ul><h2 id="_2-0-0" tabindex="-1">2.0.0 <a class="header-anchor" href="#_2-0-0" aria-label="Permalink to &quot;2.0.0&quot;">​</a></h2><h3 id="major-changes-2" tabindex="-1">Major Changes <a class="header-anchor" href="#major-changes-2" aria-label="Permalink to &quot;Major Changes&quot;">​</a></h3><ul><li>Implemented Register function on the Field object and the FieldArray object, meaning you create subforms more easily. Visit the <a href="https://wisemen-digital.github.io/vue-formango/examples/subforms" target="_blank" rel="noreferrer">documentation</a> for an example.</li><li>Changed the useForm API to use a single object. For future updates / features the API doesn&#39;t need breaking changes this way.</li><li>Added tests.</li><li>Refactored library based on tests.</li><li>Updated docs for 2.0 and added more examples.</li></ul>',9),d=[i,s,l];function h(c,u,m,f,b,g){return r(),t("div",null,d)}const F=o(n,[["render",h]]);export{_ as __pageData,F as default};
